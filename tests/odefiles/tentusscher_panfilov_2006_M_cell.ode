# Alternans and spiral breakup in a human ventricular tissue model
#
# ABSTRACT: Ventricular fibrillation (VF) is one of the main causes of death in
# the Western world. According to one hypothesis, the chaotic excitation dynamics
# during VF are the result of dynamical instabilities in action potential
# duration (APD) the occurrence of which requires that the slope of the APD
# restitution curve exceeds 1. Other factors such as electrotonic coupling and
# cardiac memory also determine whether these instabilities can develop. In this
# paper we study the conditions for alternans and spiral breakup in human cardiac
# tissue. Therefore, we develop a new version of our human ventricular cell
# model, which is based on recent experimental measurements of human APD
# restitution and includes a more extensive description of intracellular calcium
# dynamics. We apply this model to study the conditions for electrical
# instability in single cells, for reentrant waves in a ring of cells, and for
# reentry in two-dimensional sheets of ventricular tissue. We show that an
# important determinant for the onset of instability is the recovery dynamics of
# the fast sodium current. Slower sodium current recovery leads to longer periods
# of spiral wave rotation and more gradual conduction velocity restitution, both
# of which suppress restitution-mediated instability. As a result, maximum
# restitution slopes considerably exceeding 1 (up to 1.5) may be necessary for
# electrical instability to occur. Although slopes necessary for the onset of
# instabilities found in our study exceed 1, they are within the range of
# experimentally measured slopes. Therefore, we conclude that steep APD
# restitution-mediated instability is a potential mechanism for VF in the human
# heart.
#
# The original paper reference is cited below:
#
# Alternans and spiral breakup in a human ventricular tissue model, K.H.W.J. ten
# Tusscher, A.V. Panfilov, Sep 2006,American Journal of Physiology, Heart and
# Circulatory Physiology, 291 3, H1088-1100.PubMed ID: 16565318
#

# gotran file generated by cellml2gotran from ten_tusscher_model_2006_IK1Ko_M_units.cellml

parameters("Reversal potentials",
           P_kna = ScalarParam(0.03, description="Permeability of Na"))

parameters("Inward rectifier potassium current",
           g_K1 = ScalarParam(5.405, unit="nS*pF**-1", description="I_K1 base conductivity"))

parameters("Rapid time dependent potassium current",
           g_Kr = ScalarParam(0.153, unit="nS*pF**-1", description="I_Kr base conductivity"))

states("Rapid time dependent potassium current", "Xr1 gate",
       Xr1 = ScalarParam(0.0165, description="Xr1 gate in I_Kr"))

states("Rapid time dependent potassium current", "Xr2 gate",
       Xr2 = ScalarParam(0.473, description="Xr2 gate in I_Kr"))

parameters("Slow time dependent potassium current",
           g_Ks = ScalarParam(0.098, unit="nS*pF**-1", description="I_Ks base conductivity"))

states("Slow time dependent potassium current", "Xs gate",
       Xs = ScalarParam(0.0174, description="Xs gate in I_Ks"))

parameters("Fast sodium current",
           g_Na = ScalarParam(14.838, unit="nS*pF**-1",
                              description="I_Na base conductivity"))

states("Fast sodium current", "m gate",
       m = ScalarParam(0.00165, description="m gate in I_Na"))

states("Fast sodium current", "h gate",
       h = ScalarParam(0.749, description="h gate in I_Na"))

states("Fast sodium current", "j gate",
       j = ScalarParam(0.6788, description="j gate in I_Na"))

parameters("Sodium background current",
           g_bna = ScalarParam(0.00029, unit="nS*pF**-1",
                               description="I_b_Na base conductivity"))

parameters("L_type Ca current",
           g_CaL = ScalarParam(0.0000398, unit="l*F**-1*s**-1",
                               description="I_CaL base conductivity"))

states("L_type Ca current", "d gate",
       d = ScalarParam(3.288e-5, description="d gate in I_CaL"))

states("L_type Ca current", "f gate",
       f = ScalarParam(0.7026, description="f gate in I_CaL"))

states("L_type Ca current", "F2 gate",
       f2 = ScalarParam(0.9526, description="f2 gate in I_CaL"))

states("L_type Ca current", "FCass gate",
       fCass = ScalarParam(0.9942, description="FCass gate in I_CaL"))

parameters("Calcium background current",
           g_bca = ScalarParam(0.000592, unit="nS*pF**-1",
                               description="I_b_Ca base conductivity"))

parameters("Transient outward current",
           g_to = ScalarParam(0.294, unit="nS*pF**-1",
                              description="I_to base conductivity"))

states("Transient outward current", "s gate",
       s = ScalarParam(0.999998, description="s gate in I_to"))

states("Transient outward current", "r gate",
       r = ScalarParam(2.347e-8, description="s gate in I_to"))

parameters("Sodium potassium pump current",
           P_NaK = ScalarParam(2.724, unit="pA*pF**-1",
                               description="I_NaK base rate"),
           K_mk = ScalarParam(1, unit="mM",
                              description="K dissociation constant for I_NaK"),
           K_mNa = ScalarParam(40, unit="mM",
                               description="Na dissociation constant for I_NaK"))

parameters("Sodium calcium exchanger current",
           K_NaCa = ScalarParam(1000, unit="pA*pF**-1",
                                description="I_NaCa base rate"),
           K_sat = 0.1,
           alpha = 2.5,
           gamma = 0.35,
           Km_Ca = ScalarParam(1.38, unit="mM",
                               description="Ca_o dissociation constant for I_NaCa"),
           Km_Nai = ScalarParam(87.5, unit="mM",
                                description="Na_i dissociation constant for I_NaCa"))

parameters("Calcium pump current",
           g_pCa = ScalarParam(0.1238, unit="pA*pF**-1",
                               description="I_pCa base conductivity"),
           K_pCa = ScalarParam(0.0005, unit="mM",
                               description="Ca_i dissociation constant for I_pCa"))

parameters("Potassium pump current",
           g_pK = ScalarParam(0.0146, unit="nS*pF**-1",
                              description="I_pK base conductivity"))

states("Calcium dynamics",
       R_prime = ScalarParam(0.8978, description="RyR availability"),
       Ca_i = ScalarParam(0.000153, unit="mM", description="Intracellular Ca"),
       Ca_SR = ScalarParam(4.272, unit="mM", description="SR Ca"),
       Ca_ss = ScalarParam(0.00042, unit="mM", description="Subspace Ca"))

parameters("Calcium dynamics",
           Ca_o = ScalarParam(2, unit="mM", description="External Ca"),
           k1_prime = ScalarParam(0.15, unit="mM**-2*ms**-1",
                                  description="RyR opening rate"),
           k2_prime = ScalarParam(0.045, unit="mM**-1*ms**-1",
                                  description="RyR inactivation rate"),
           k3 = ScalarParam(0.06, unit="ms**-1",
                            description="RyR deactivation rate"),
           k4 = ScalarParam(0.005, unit="ms**-1",
                            description="RyR return from inactivation rate"),
           EC = ScalarParam(1.5, unit="mM",
                            description="RyR SR Ca scale value"),
           max_sr = ScalarParam(2.5, unit="mM",
                                description="RyR max SR Ca scale value"),
           min_sr = ScalarParam(1., unit="mM",
                                description="RyR min SR Ca scale value"),
           V_rel = ScalarParam(0.102, unit="ms**-1",
                               description="RyR base release rate"),
           V_xfer = ScalarParam(0.0038, unit="ms**-1",
                                description="Ca base transfer rate"),
           K_up = ScalarParam(0.00025, unit="mM",
                              description="Ca dissociation constant for SERCA pump"),
           V_leak = ScalarParam(0.00036, unit="ms**-1",
                                description="Ca leak rate"),
           Vmax_up = ScalarParam(0.006375, unit="mM*ms**-1",
                                 description="Ca base rate SERCA pump"),
           Buf_c = ScalarParam(0.2, unit="mM",
                               description="Total Ca buffer capacity in Cytosole"),
           K_buf_c = ScalarParam(0.001, unit="mM",
                                 description="Ca dissociation constant for buffer in Cytosole"),
           Buf_sr = ScalarParam(10, unit="mM",
                                description="Total Ca buffer capacity in SR"),
           K_buf_sr = ScalarParam(0.3, unit="mM",
                                  description="Ca dissociation constant for buffer in SR"),
           Buf_ss = ScalarParam(0.4, unit="mM",
                                description="Total Ca buffer capacity in sub space"),
           K_buf_ss = ScalarParam(0.00025, unit="mM",
                                  description="Ca dissociation constant for buffer in sub space"),
           V_sr = ScalarParam(0.001094, unit="um**3", description="Volume SR"),
           V_ss = ScalarParam(0.00005468, unit="um**3", description="Volume sub space"))

states("Sodium dynamics",
       Na_i = ScalarParam(10.132, unit="mM", description="Intracellular Na"))

parameters("Sodium dynamics",
           Na_o = ScalarParam(140, unit="mM", description="Extracellular Na"))

states("Membrane",
       V = ScalarParam(-85.423, unit="mV", description="Membrane potential"))

parameters("Membrane",
           R = ScalarParam(8314.472, unit="J*mole**-1*K**-1",
                           description="Universal gass constant"),
           T = ScalarParam(310, unit="K", description="Temperature"),
           F = ScalarParam(96485.3415, unit="C*mmole**-1"),
           Cm = ScalarParam(0.185, unit="uF", description="Faraday\\'s constant"),
           V_c = ScalarParam(0.016404, unit="um**3", description="Volume cytosole"),
           stim_start = ScalarParam(10, unit="ms", description="Start time for stimulation"),
           stim_period = ScalarParam(1000, unit="ms", description="Timer period for stimulation"),
           stim_duration = ScalarParam(1, unit="ms", description="Duration time for stimulation"),
           stim_amplitude = ScalarParam(52, unit="pA*pF**-1", description="Amplitude for stimulation"))

states("Potassium dynamics",
       K_i = ScalarParam(138.52, unit="mM", description="Intracellular K"))

parameters("Potassium dynamics",
           K_o = ScalarParam(5.4, unit="mM", description="Extracellular K"))

expressions("Reversal potentials")
E_Na = R*T/F*log(Na_o/Na_i) # mV
E_K = R*T/F*log(K_o/K_i) # mV
E_Ks = R*T/F*log((K_o + P_kna*Na_o)/(K_i + P_kna*Na_i)) # mV
E_Ca = 0.5*R*T/F*log(Ca_o/Ca_i) # mV

expressions("Inward rectifier potassium current")
alpha_K1 = 0.1/(1 + exp(0.06*(V - E_K - 200)))
beta_K1 = (3*exp(0.0002*(V - E_K + 100)) + exp(0.1*(V - E_K - 10)))/(1 + exp(-0.5*(V - E_K)))
xK1_inf = alpha_K1/(alpha_K1 + beta_K1)
i_K1 = g_K1*xK1_inf*sqrt(K_o/5.4)*(V - E_K) # pA*pF**-1

expressions("Rapid time dependent potassium current")
i_Kr = g_Kr*sqrt(K_o/5.4)*Xr1*Xr2*(V - E_K) # pA*pF**-1

expressions("Rapid time dependent potassium current", "Xr1 gate")
xr1_inf = 1/(1 + exp((-26 - V)/7))
alpha_xr1 = 450/(1 + exp((-45 - V)/10))
beta_xr1 = 6/(1 + exp((V + 30)/11.5))
tau_xr1 = 1*alpha_xr1*beta_xr1 # ms
dXr1_dt = (xr1_inf - Xr1)/tau_xr1

expressions("Rapid time dependent potassium current", "Xr2 gate")
xr2_inf = 1/(1 + exp((V + 88)/24))
alpha_xr2 = 3/(1 + exp((-60 - V)/20))
beta_xr2 = 1.12/(1 + exp((V - 60)/20))
tau_xr2 = 1*alpha_xr2*beta_xr2 # ms
dXr2_dt = (xr2_inf - Xr2)/tau_xr2

expressions("Slow time dependent potassium current")
i_Ks = g_Ks*Xs**2*(V - E_Ks) # pA*pF**-1

expressions("Slow time dependent potassium current", "Xs gate")
xs_inf = 1/(1 + exp((-5 - V)/14))
alpha_xs = 1400/sqrt(1 + exp((5 - V)/6))
beta_xs = 1/(1 + exp((V - 35)/15))
tau_xs = 1*alpha_xs*beta_xs + 80 # ms
dXs_dt = (xs_inf - Xs)/tau_xs

expressions("Fast sodium current")
i_Na = g_Na*m**3*h*j*(V - E_Na) # pA*pF**-1

expressions("Fast sodium current", "m gate")
m_inf = 1/(1 + exp((-56.86 - V)/9.03))**2
alpha_m = 1/(1 + exp((-60 - V)/5))
beta_m = 0.1/(1 + exp((V + 35)/5)) + 0.1/(1 + exp((V - 50)/200))
tau_m = 1*alpha_m*beta_m # ms
dm_dt = (m_inf - m)/tau_m

expressions("Fast sodium current", "h gate")
h_inf = 1/(1 + exp((V + 71.55)/7.43))**2
alpha_h = Conditional(Lt(V, -40), 0.057*exp(-(V + 80)/6.8), 0) # ms**-1
beta_h = Conditional(Lt(V, -40), 2.7*exp(0.079*V) + 310000*exp(0.3485*V), 0.77/(0.13*(1 + exp((V + 10.66)/-11.1)))) # ms**-1
tau_h = 1/(alpha_h + beta_h) # ms
dh_dt = (h_inf - h)/tau_h

expressions("Fast sodium current", "j gate")
j_inf = 1/(1 + exp((V + 71.55)/7.43))**2
alpha_j = Conditional(Lt(V, -40), (-25428*exp(0.2444*V) - 6.948e-6*exp(-0.04391*V))*(V + 37.78)/1/(1 + exp(0.311*(V + 79.23))), 0) # ms**-1
beta_j = Conditional(Lt(V, -40), 0.02424*exp(-0.01052*V)/(1 + exp(-0.1378*(V + 40.14))), 0.6*exp(0.057*V)/(1 + exp(-0.1*(V + 32)))) # ms**-1
tau_j = 1/(alpha_j + beta_j) # ms
dj_dt = (j_inf - j)/tau_j

expressions("Sodium background current")
i_b_Na = g_bna*(V - E_Na) # pA*pF**-1

expressions("L_type Ca current")
V_eff = Conditional(Lt(abs(V-15), 1.e-2), 1e-2, V-15)
i_CaL = g_CaL*d*f*f2*fCass*4*V_eff*F**2/(R*T)*(0.25*Ca_ss*exp(2*V_eff*F/(R*T)) - Ca_o)/(exp(2*V_eff*F/(R*T)) - 1) # pA*pF**-1

expressions("L_type Ca current", "d gate")
d_inf = 1/(1 + exp((-8 - V)/7.5))
alpha_d = 1.4/(1 + exp((-35 - V)/13)) + 0.25
beta_d = 1.4/(1 + exp((V + 5)/5))
gamma_d = 1/(1 + exp((50 - V)/20)) # ms
tau_d = 1*alpha_d*beta_d + gamma_d # ms
dd_dt = (d_inf - d)/tau_d

expressions("L_type Ca current", "f gate")
f_inf = 1/(1 + exp((V + 20)/7))
tau_f = 1102.5*exp(-((V + 27)**2)/225) + 200/(1 + exp((13 - V)/10)) + 180/(1 + exp((V + 30)/10)) + 20 # ms
df_dt = (f_inf - f)/tau_f

expressions("L_type Ca current", "F2 gate")
f2_inf = 0.67/(1 + exp((V + 35)/7)) + 0.33
tau_f2 = 562*exp(-((V + 27)**2)/240) + 31/(1 + exp((25 - V)/10)) + 80/(1 + exp((V + 30)/10)) # ms
df2_dt = (f2_inf - f2)/tau_f2

expressions("L_type Ca current", "FCass gate")
fCass_inf = 0.6/(1 + (Ca_ss/0.05)**2) + 0.4
tau_fCass = 80/(1 + (Ca_ss/0.05)**2) + 2 # ms
dfCass_dt = (fCass_inf - fCass)/tau_fCass

expressions("Calcium background current")
i_b_Ca = g_bca*(V - E_Ca) # pA*pF**-1

expressions("Transient outward current")
i_to = g_to*r*s*(V - E_K) # pA*pF**-1

expressions("Transient outward current", "s gate")
s_inf = 1/(1 + exp((V + 20)/5))
tau_s = 85*exp(-((V + 45)**2)/320) + 5/(1 + exp((V - 20)/5)) + 3 # ms
ds_dt = (s_inf - s)/tau_s

expressions("Transient outward current", "r gate")
r_inf = 1/(1 + exp((20 - V)/6))
tau_r = 9.5*exp(-((V + 40)**2)/1800) + 0.8 # ms
dr_dt = (r_inf - r)/tau_r

expressions("Sodium potassium pump current")
i_NaK = P_NaK*K_o/(K_o + K_mk)*Na_i/(Na_i + K_mNa)/(1 + 0.1245*exp(-0.1*V*F/(R*T)) + 0.0353*exp(-V*F/(R*T))) # pA*pF**-1

expressions("Sodium calcium exchanger current")
i_NaCa = K_NaCa*(exp(gamma*V*F/(R*T))*Na_i**3*Ca_o - exp((gamma - 1)*V*F/(R*T))*Na_o**3*Ca_i*alpha)/((Km_Nai**3 + Na_o**3)*(Km_Ca + Ca_o)*(1 + K_sat*exp((gamma - 1)*V*F/(R*T)))) # pA*pF**-1

expressions("Calcium pump current")
i_p_Ca = g_pCa*Ca_i/(Ca_i + K_pCa) # pA*pF**-1

expressions("Potassium pump current")
i_p_K = g_pK*(V - E_K)/(1 + exp((25 - V)/5.98)) # pA*pF**-1

expressions("Calcium dynamics")
i_up = Vmax_up/(1 + K_up**2/Ca_i**2) # mM*ms**-1
i_leak = V_leak*(Ca_SR - Ca_i) # mM*ms**-1
i_xfer = V_xfer*(Ca_ss - Ca_i) # mM*ms**-1
kcasr = max_sr - (max_sr - min_sr)/(1 + (EC/Ca_SR)**2)
Ca_i_bufc = 1/(1 + Buf_c*K_buf_c/(Ca_i + K_buf_c)**2)
Ca_sr_bufsr = 1/(1 + Buf_sr*K_buf_sr/(Ca_SR + K_buf_sr)**2)
Ca_ss_bufss = 1/(1 + Buf_ss*K_buf_ss/(Ca_ss + K_buf_ss)**2)
dCa_i_dt = Ca_i_bufc*((i_leak - i_up)*V_sr/V_c + i_xfer - 1*(i_b_Ca + i_p_Ca - 2*i_NaCa)*Cm/(2*1*V_c*F))
k1 = k1_prime/kcasr # mM**-2*ms**-1
k2 = k2_prime*kcasr # mM**-1*ms**-1
O = k1*Ca_ss**2*R_prime/(k3 + k1*Ca_ss**2)
dR_prime_dt = -k2*Ca_ss*R_prime + k4*(1 - R_prime)
i_rel = V_rel*O*(Ca_SR - Ca_ss) # mM*ms**-1
dCa_SR_dt = Ca_sr_bufsr*(i_up - (i_rel + i_leak))
dCa_ss_dt = Ca_ss_bufss*(-1*i_CaL*Cm/(2*1*V_ss*F) + i_rel*V_sr/V_ss - i_xfer*V_c/V_ss)

expressions("Sodium dynamics")
dNa_i_dt = -1*(i_Na + i_b_Na + 3*i_NaK + 3*i_NaCa)/(1*V_c*F)*Cm

expressions("Membrane")
i_Stim = Conditional(And(Ge(time - floor(time/stim_period)*stim_period, stim_start), Le(time - floor(time/stim_period)*stim_period, stim_start + stim_duration)), -stim_amplitude, 0) # pA*pF**-1
dV_dt = -(i_K1 + i_to + i_Kr + i_Ks + i_CaL + i_NaK + i_Na + i_b_Na + i_NaCa + i_b_Ca + i_p_K + i_p_Ca + i_Stim)

expressions("Potassium dynamics")
dK_i_dt = -1*(i_K1 + i_to + i_Kr + i_Ks + i_p_K + i_Stim - 2*i_NaK)/(1*V_c*F)*Cm
